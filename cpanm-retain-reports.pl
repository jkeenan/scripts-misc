#!/usr/bin/env perl
use 5.14.0;
use warnings;
use Carp;
use Getopt::Long;
use CPAN::cpanminus::reporter::RetainReports;

=head1 NAME

cpanm-retain-reports.pl - Parse F<cpanm> F<build.log> into JSON files

=head1 SYNOPSIS

    perl cpanm-retain-reports.pl \
        --json_dir=/path/to/directory/for/json/files \
        --verbose

=head1 DESCRIPTION

This is a program which simulates the C<analyze_cpanm_build_logs()> method of
CPAN module F<Test::Against::Dev>.  The program is essentially a wrapper
around CPAN module F<CPAN::cpanminus::reporter::RetainReports>.  The program
assumes that you have used F<cpanm> to install a list of CPAN modules agai nst
a given F<perl> executable and that you have access to the F<build.log> file
generated by running F<cpanm >.  The program parses that log into one F<.json>
file for each CPAN distribution reached during F<cpanm>.  The files are
written to a user-specified directory for further processing.

=head1 PREREQUISITES

Uses the following non-core CPAN module:

    CPAN::cpanminus::reporter::RetainReports

CPAN module F<CPAN::cpanminus::reporter::RetainReports> is built on top of
CPAN distribution F<App-cpanminus-reporter> and therefore depends on that
distribution's prerequisites and on some environmental variable settings
required by the latter.

=over 4

=item * C<HOMEDIR>

This envvar is used in the definition of the default values of the next two
envvars.

=item * C<PERL_CPANM_HOME>

This envvar represents the directory in which F<cpanm> stores its data.  This
is typically F<~/.cpanm>, but the user may override.  This directory typically
holds two subdirectories, F<sources> and F<work> as well as two symlinks,
F<latest-build> to a directory underneath F<work> and F<build.log> to a file
in the directory targeted by F<latest-build>.  The actual F<build.log> file is
what gets parsed by this program.

=item * C<PERL_CPAN_REPORTER_DIR>

This envvar represents the directory in which the F<CPAN::Reporter> module
does its work.  This is typically F<~/.cpanreporter>, but the user may
override.  The directory typically holds two files:  F<config.ini> and
F<metabase_id.json>.

=back

=head1 USAGE

Call this program with command-line switches.  At the present time there are 5
such switches.

=over 4

=item * C<--json_dir>

Full path to directory in which F<.json> files will be written.  Required.

=item * C<--verbose>

Flag turning on verbose output.

=back

The following 3 switches are B<not> recommended unless you know what you are doing.

=over 4

=item * C<--perl_cpanm_home>

Full path to directory which will serve as localized value for envvar C<PERL_CPANM_HOME>. 

=item * C<--perl_cpan_reporter_dir>

Full path to directory which will serve as localized value for envvar C<PERL_CPAN_REPORTER_DIR>.

=item * C<--log>

Basename of F<cpanm> F<build.log> file.

=back

=cut

my ($log, $perl_cpanm_home, $perl_cpan_reporter_dir, $json_dir, $verbose);

GetOptions(
    "perl_cpanm_home=s"         => \$perl_cpanm_home,
    "perl_cpan_reporter_dir=s"  => \$perl_cpan_reporter_dir,
    "log=s"                     => \$log,
    "json_dir=s"                => \$json_dir,
    "verbose"                   => \$verbose,
) or croak("Error in command-line arguments\n");

$perl_cpanm_home        //= "$ENV{HOMEDIR}/.cpanm";
$perl_cpan_reporter_dir //= "$ENV{HOMEDIR}/.cpanreporter";

for my $dir ($perl_cpanm_home, $perl_cpan_reporter_dir, $json_dir) {
    croak "Unable to locate $dir" unless -d $dir;
}

my $cpanmdir = $perl_cpanm_home;
$log //= "$cpanmdir/build.log";
croak "Could not locate cpanm build.log (or symlink thereto)"
    unless (-f $log or -l $log);

local $ENV{PERL_CPANM_HOME}         = $cpanmdir;
local $ENV{PERL_CPAN_REPORTER_DIR}  = "$ENV{HOMEDIR}/.cpanreporter";

if ($verbose) {
    say <<MESSAGE;
cpanm build.log:        $log
JSON files in:          $json_dir
PERL_CPANM_HOME:        $perl_cpanm_home
PERL_CPAN_REPORTER_DIR: $perl_cpan_reporter_dir
MESSAGE
}

my $reporter = CPAN::cpanminus::reporter::RetainReports->new(
    force               => 1,           # ignore mtime check on cpanm build.log
    build_dir           => $cpanmdir,
    build_logfile       => $log,
    'ignore-versions'   => 1,
);

$reporter->set_report_dir($json_dir);
$reporter->run;

say "See JSON output files in $json_dir" if $verbose;
say "\nFinished";

